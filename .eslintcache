[{"C:\\Users\\MP\\Desktop\\pokemon-t\\src\\index.tsx":"1","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\reportWebVitals.ts":"2","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\App.tsx":"3","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\core\\http\\pokemon.service.ts":"4","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\modules\\item\\item.container.tsx":"5","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\modules\\pokemon\\pokemon.container.tsx":"6","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\modules\\ability\\ability.container.tsx":"7","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\modules\\other\\other.container.tsx":"8","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\modules\\move\\move.container.tsx":"9","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\modules\\pokemon\\pages\\pokemon-summary\\pokemon-summary.component.tsx":"10","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\modules\\pokemon\\pages\\pokemon-summary\\pokemon-detail.component.tsx":"11","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\shared\\type-color.enum.ts":"12","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\shared\\utils\\use-on-screen.utils.ts":"13","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\shared\\utils\\use-stat-calculator.utils.ts":"14","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\shared\\utils\\use-text-sentence.utils.ts":"15","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\shared\\utils\\scroll-to-top.utils.ts":"16","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\core\\http\\pokemon.repository.ts":"17","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\shared\\utils\\id-extractor.utils.ts":"18","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\shared\\components\\spinner.component.tsx":"19","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\shared\\contexts\\spinner.context.tsx":"20","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\shared\\components\\type-pill.component.tsx":"21","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\shared\\components\\fab-menu\\fab-menu.component.tsx":"22"},{"size":777,"mtime":1612599193463,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":2021,"mtime":1613375621246,"results":"26","hashOfConfig":"24"},{"size":5453,"mtime":1613132888051,"results":"27","hashOfConfig":"24"},{"size":83,"mtime":1612177378564,"results":"28","hashOfConfig":"24"},{"size":647,"mtime":1612583122065,"results":"29","hashOfConfig":"24"},{"size":89,"mtime":1612177382818,"results":"30","hashOfConfig":"24"},{"size":85,"mtime":1612177371342,"results":"31","hashOfConfig":"24"},{"size":83,"mtime":1612177375060,"results":"32","hashOfConfig":"24"},{"size":5006,"mtime":1613132916547,"results":"33","hashOfConfig":"24"},{"size":43875,"mtime":1613144555204,"results":"34","hashOfConfig":"24"},{"size":490,"mtime":1612593098825,"results":"35","hashOfConfig":"24"},{"size":433,"mtime":1612601644586,"results":"36","hashOfConfig":"24"},{"size":944,"mtime":1612673578609,"results":"37","hashOfConfig":"24"},{"size":482,"mtime":1612684438777,"results":"38","hashOfConfig":"39"},{"size":256,"mtime":1613108231604,"results":"40","hashOfConfig":"24"},{"size":616,"mtime":1613127276293,"results":"41","hashOfConfig":"24"},{"size":214,"mtime":1613123688862,"results":"42","hashOfConfig":"24"},{"size":657,"mtime":1613143438467,"results":"43","hashOfConfig":"24"},{"size":122,"mtime":1613131413181,"results":"44","hashOfConfig":"24"},{"size":392,"mtime":1613143735305,"results":"45","hashOfConfig":"24"},{"size":2259,"mtime":1613377362573,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"kx8lnu",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"56","usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"49"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"49"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7w8u5w",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"49"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"49"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\MP\\Desktop\\pokemon-t\\src\\index.tsx",[],["99","100"],"C:\\Users\\MP\\Desktop\\pokemon-t\\src\\reportWebVitals.ts",[],"C:\\Users\\MP\\Desktop\\pokemon-t\\src\\App.tsx",["101","102","103"],"C:\\Users\\MP\\Desktop\\pokemon-t\\src\\core\\http\\pokemon.service.ts",["104","105"],"import axios from \"axios\";\r\nimport { IdExtractor } from \"../../shared/utils/id-extractor.utils\";\r\nimport PokemonRepository from \"./pokemon.repository\";\r\n\r\nexport default function PokemonService() {\r\n    const pokemonRepository = PokemonRepository(); \r\n\r\n    const getPokemonList = async() => {\r\n        const list = await pokemonRepository.getPokemons().then(res => {\r\n            const data = res.data.results.map((r: any, i: number) => ({\r\n                index: i + 1,\r\n                name: r.name,\r\n                url: r.url,\r\n            }));\r\n            const sortedList = [\r\n                data.slice(0, 151),\r\n                data.slice(151, 251),\r\n                data.slice(251, 386),\r\n                data.slice(386, 493),\r\n                data.slice(493, 649),\r\n                data.slice(649, 721),\r\n                data.slice(721, 809),\r\n                data.slice(809)\r\n            ];            \r\n            return sortedList;\r\n        });\r\n        return list;\r\n\r\n    }\r\n    const getPokemon = async (index: number) => {\r\n        const pokemon = await pokemonRepository.getPokemon(index).then(res => res.data);\r\n        const species = await pokemonRepository.getSpecies(index).then(res => res.data);\r\n        const evolution = await pokemonRepository.getEvolution(IdExtractor(species?.evolution_chain.url)).then(res => res.data);\r\n        const moves = await Promise.all<any>(pokemon.moves.map((m: any) => {\r\n            return pokemonRepository.getMove(IdExtractor(m.move.url)).then((res) => res.data);\r\n        }));\r\n        \r\n        const formattedMoveset = formatMoveset(pokemon.moves, moves);\r\n        const formattedEvolution = formatEvolutionChain(evolution.chain);\r\n        console.log({\r\n            ...pokemon,\r\n            base_happiness: species.base_happiness,\r\n            capture_rate: species.capture_rate,\r\n            gender_rate: species.gender_rate,\r\n            egg_groups: species.egg_groups,\r\n            hatch_counter: species.hatch_counter,\r\n            moves: formattedMoveset,\r\n            chain: formattedEvolution\r\n        });\r\n\r\n        return {\r\n            ...pokemon,\r\n            base_happiness: species.base_happiness,\r\n            capture_rate: species.capture_rate,\r\n            gender_rate: species.gender_rate,\r\n            egg_groups: species.egg_groups,\r\n            hatch_counter: species.hatch_counter,\r\n            moves: formattedMoveset,\r\n            evolution: formattedEvolution\r\n        }\r\n    \r\n        \r\n    }\r\n    const getPreviousNextPokemon = async (index: number) => {       \r\n        return Promise.all([\r\n            pokemonRepository.getPokemon(index-1).catch(ex => {return {data: null}}), \r\n            pokemonRepository.getPokemon(index+1).catch(ex => {return {data: null}})\r\n        ])\r\n            .then(res => res.map(m => m.data));\r\n    }\r\n    const formatMoveset = (movesetSummary: any[], movesetDetail: any[]) => {\r\n        let moveset = movesetSummary.map((m: any, i :number) => ({\r\n            id: movesetDetail[i].id,\r\n            name: m?.move.name,\r\n            levelLearnedAt: m?.version_group_details[m?.version_group_details.length - 1]?.level_learned_at,\r\n            method: m?.version_group_details[m?.version_group_details.length - 1]?.move_learn_method.name,\r\n            type: movesetDetail[i].type.name,\r\n            power: movesetDetail[i].power,\r\n            pp: movesetDetail[i].pp,\r\n            priority: movesetDetail[i].priority,\r\n            damageClass: movesetDetail[i].damage_class.name,\r\n            accuracy: movesetDetail[i].accuracy,\r\n        }));;\r\n        moveset.sort((a: any, b: any) => a.method.localeCompare(b.method));\r\n        moveset.sort((a: any, b: any) => a.levelLearnedAt - b.levelLearnedAt);\r\n        const levelMoveIndex = moveset.findIndex((a: any) => a.levelLearnedAt > 0);\r\n        moveset = [...moveset.slice(levelMoveIndex), ...moveset.slice(0, levelMoveIndex)];\r\n        return moveset;\r\n    }\r\n\r\n    const formatEvolutionChain = (chain: any) => {\r\n        \r\n            let curr = chain;\r\n            const result = {\r\n                rootName: chain.species.name,\r\n                rootId: chain.species.url.match(/https:\\/\\/pokeapi\\.co\\/api\\/v2\\/.*\\/(\\d+)\\//)?.[1],\r\n                chain: new Array()\r\n            };\r\n            let treeIndex = 1;\r\n            while (!!(curr?.evolves_to)) {\r\n                for (let c of curr?.evolves_to) {\r\n                    result.chain.push({\r\n                        name: c.species.name,\r\n                        id: c.species.url.match(/https:\\/\\/pokeapi\\.co\\/api\\/v2\\/.*\\/(\\d+)\\//)?.[1],\r\n                        evolutionDetail: c.evolution_details.length ? [c.evolution_details[c.evolution_details.length - 1]] : [],\r\n                        evolutionOtherMethods: c.evolution_details.slice(0, -1),\r\n                        treeIndex: c.evolution_to ? treeIndex + 1 : treeIndex\r\n                    });\r\n                }\r\n                treeIndex++;\r\n    \r\n                curr = curr.evolves_to[0];\r\n    \r\n            }\r\n            result.chain = result.chain.reduce((save, curr) => {\r\n                const temp = result.chain.filter((x: any) => x.treeIndex === curr.treeIndex);\r\n                if (save.length < curr.treeIndex) {\r\n                    save.push(temp);\r\n                }\r\n                return save;\r\n            }, []);\r\n    \r\n            return result;\r\n    }\r\n    \r\n    return {getPokemonList, getPokemon, getPreviousNextPokemon};\r\n}\r\n","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\modules\\item\\item.container.tsx",[],"C:\\Users\\MP\\Desktop\\pokemon-t\\src\\modules\\pokemon\\pokemon.container.tsx",[],"C:\\Users\\MP\\Desktop\\pokemon-t\\src\\modules\\ability\\ability.container.tsx",[],"C:\\Users\\MP\\Desktop\\pokemon-t\\src\\modules\\other\\other.container.tsx",[],"C:\\Users\\MP\\Desktop\\pokemon-t\\src\\modules\\move\\move.container.tsx",[],"C:\\Users\\MP\\Desktop\\pokemon-t\\src\\modules\\pokemon\\pages\\pokemon-summary\\pokemon-summary.component.tsx",["106","107","108"],"import React, { useContext, useRef } from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router\";\r\nimport PokemonRepository from \"../../../../core/http/pokemon.repository\";\r\nimport PokemonService from \"../../../../core/http/pokemon.service\";\r\nimport SpinnerContext from \"../../../../shared/contexts/spinner.context\";\r\nimport useOnScreen from \"../../../../shared/utils/use-on-screen.utils\";\r\nexport function PokemonSummary() {\r\n    const [pokemons, setPokemons] = useState<any []>([]);\r\n    const pokemonService = PokemonService();\r\n    const pokemonGens = useRef(new Array<HTMLElement>());\r\n    const genNav = useRef(null);\r\n    const history = useHistory();\r\n    const isShown = useOnScreen(genNav);\r\n    const {setIsLoading} = useContext(SpinnerContext);\r\n    useEffect(() => {\r\n        const getPokemon = async () => {\r\n            setIsLoading(true);\r\n            const list = await pokemonService.getPokemonList().finally(() => setIsLoading(false));\r\n            setPokemons(list);\r\n        }\r\n        \r\n        getPokemon();\r\n        \r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      \r\n        if(pokemonGens.current.length) {\r\n            scrollToGen(Number(history.location.hash.replace('#', '')));\r\n        }\r\n    },[pokemons])\r\n\r\n  \r\n    \r\n\r\n\r\n\r\n    const getColor = (groupIndex: number): any => {\r\n        const bg = [\r\n            {\r\n                backgroundColor: 'rgb(220, 53, 69, 0.8)',\r\n                border: '1px solid rgb(220, 53, 69, 0.5)'\r\n            },\r\n            {\r\n                backgroundColor: 'rgb(251, 195, 5, 0.8)',\r\n                border: '1px solid rgb(251, 195, 5, 0.5)'\r\n            },\r\n            {\r\n                backgroundColor: 'rgb(21, 154, 192, 0.8)',\r\n                border: '1px solid rgb(21, 154, 192, 0.5)'\r\n            },\r\n            {\r\n                backgroundColor: 'rgb(96, 87, 86, 0.8)',\r\n                border: '1px solid rgb(96, 87, 86, 0.5)'\r\n            },\r\n            {\r\n                backgroundColor: 'rgb(36, 65, 114, 0.8)',\r\n                border: '1px solid rgb(36, 65, 114, 0.5)'\r\n            },\r\n            {\r\n                backgroundColor: 'rgb(170, 117, 188, 0.8)',\r\n                border: '1px solid rgb(170, 117, 188, 0.5)'\r\n            },\r\n            {\r\n                backgroundColor: 'rgb(36, 49, 74, 0.8)',\r\n                border: '1px solid rgb(36, 49, 74, 0.5)'\r\n            },\r\n            {\r\n                backgroundColor: 'rgb(23, 143, 98, 0.8)',\r\n                border: '1px solid rgb(23, 143, 98, 0.5)'\r\n            },\r\n        ];\r\n        return bg[groupIndex];\r\n    }\r\n\r\n    const scrollToGen = (gen: number) => {\r\n        pokemonGens.current[gen]?.scrollIntoView();\r\n        if(isShown) {    \r\n            window.scrollTo({ top: window.scrollY - 40 });    \r\n        }\r\n        history.push(`/pokemon/s#${gen}`);\r\n    };\r\n\r\n    const viewPokemon = (index: number) => {\r\n        history.push(`/pokemon/${index}`);\r\n        \r\n    }\r\n    return (\r\n        <React.Fragment>\r\n                <Row noGutters className=\"sticky-top bg-light rounded-bottom shadow\">\r\n                    <Col bsPrefix=\"col\" className=\" d-none d-md-block py-2\" ref={genNav}>\r\n                        <Row noGutters className=\"text-center\">\r\n                            {Array.from({length: 8}, (x, i) => \r\n                                <Col key={'g'+i} className=\"btn\" onClick={() => scrollToGen(i)}>\r\n                                    Gen {i+1}\r\n                                </Col>\r\n                            )}                            \r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <div>\r\n                    \r\n               \r\n                {pokemons.map((r, i) =>\r\n                    <Row noGutters className=\"\" key={'r'+i} ref={(element: any) => pokemonGens.current.push(element)}>\r\n                        {r.map((p: any, y: number) => \r\n                            <Col bsPrefix=\"col-12 col-sm-4 col-lg-2  shadow-lg\" style={{...getColor(i)}} key={'p'+y} >\r\n                                <div className=\"btn w-100 text-center text-white\" onClick={() => viewPokemon(p?.index) }>\r\n                                    <div style={{height: '56px'}}>                                   \r\n                                        <img alt={`${p?.name}`} src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/versions/generation-viii/icons/${p?.index}.png`} onError={(e: any)=>{e.target.style.display = 'none'}}></img>\r\n                                    </div>\r\n                                    <div>#{String(p?.index).padStart(3, '0')}</div>\r\n                                    <div className=\"text-capitalize\">{p?.name}</div>\r\n                                </div>\r\n                            </Col>\r\n                        )}\r\n                    </Row>\r\n                )}\r\n             </div>\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\modules\\pokemon\\pages\\pokemon-summary\\pokemon-detail.component.tsx",["109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126"],"import { faChevronLeft, faChevronRight, faHeart, faMars, faMoon, faRibbon, faSun, faVenus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Card, Col, ProgressBar, Row } from \"react-bootstrap\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport PokemonService from \"../../../../core/http/pokemon.service\";\r\nimport { TypeColor } from \"../../../../shared/type-color.enum\";\r\nimport NumberFormat from 'react-number-format';\r\nimport useStatCalculator from \"../../../../shared/utils/use-stat-calculator.utils\";\r\nimport useTextSentence from \"../../../../shared/utils/use-text-sentence.utils\";\r\nimport Status from'../../../../assets/images/status.png';\r\nimport Physical from'../../../../assets/images/physical.png';\r\nimport Special from'../../../../assets/images/special.png';\r\nimport SpinnerContext from \"../../../../shared/contexts/spinner.context\";\r\nimport TypePill from \"../../../../shared/components/type-pill.component\";\r\n\r\nexport default function PokemonDetail() {\r\n    const {setIsLoading} = useContext(SpinnerContext);\r\n    let { index } = useParams<{ index: string }>();\r\n    const pokemonService = PokemonService();\r\n    const [pokemon, setPokemon] = useState<any>();\r\n    const [previousNextPokemon, setPreviousNextPokemon] = useState<any[]>([]);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        getPokemon();       \r\n    }, [index]);\r\n\r\n    const getPokemon = async () => {\r\n        setIsLoading(true);\r\n        const [pkm, list] = await Promise.all([\r\n            pokemonService.getPokemon(Number(index)), \r\n            pokemonService.getPreviousNextPokemon(Number(index))\r\n        ]).finally(() => {\r\n           setIsLoading(false);\r\n        });\r\n       \r\n        setPokemon(pkm);\r\n        setPreviousNextPokemon(list);\r\n\r\n    };\r\n   \r\n    const getBarColorClass = (value: number) => {\r\n        const ratio = value / 200;\r\n        if (ratio > 0.8) {\r\n            return 'info';\r\n        }\r\n        else if (ratio > 0.4) {\r\n            return 'success';\r\n        }\r\n        else if (ratio > 0.2) {\r\n            return 'warning';\r\n        }\r\n        else {\r\n            return 'danger';\r\n        }\r\n    }\r\n    const viewPokemon = (index: number) => {\r\n        history.push(`/pokemon/${index}`);\r\n    }\r\n\r\n    \r\n\r\n   \r\n    return (\r\n        <div>\r\n              \r\n\r\n            <div>\r\n                <Row noGutters className=\"shadow d-flex align-items-center px-2\" style={{ height: '50px' }}>\r\n\r\n                    <Col className=\"d-block\">\r\n                        {previousNextPokemon[0] ? <div className=\"btn\" onClick={() => viewPokemon(previousNextPokemon[0]?.id)}>\r\n                            <FontAwesomeIcon  icon={faChevronLeft} />\r\n                            <span className=\"pl-2 d-none d-md-inline-block\" >#{String(previousNextPokemon[0]?.id).padStart(3, '0')}</span>\r\n                            <div className=\"pl-2 d-inline-block text-capitalize\">{previousNextPokemon[0]?.name}</div>\r\n                        </div> : ''\r\n                        }\r\n                    </Col>\r\n                    <Col bsPrefix=\"col-auto\">\r\n                        <div className=\"text-center\">\r\n                            <span className=\"px-2 d-none d-md-inline-block\">#{String(pokemon?.id).padStart(3, '0')}</span>\r\n                            <div className=\"d-inline-block text-capitalize\">{pokemon?.name}</div>\r\n                        </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"d-block text-right\">\r\n                        {previousNextPokemon[1] ? <div className=\"btn\" onClick={() => viewPokemon(previousNextPokemon[1]?.id)}>\r\n                            <span className=\"d-none d-md-inline-block\">#{String(previousNextPokemon[1]?.id).padStart(3, '0')}</span>\r\n                            <div className=\"px-2 d-inline-block text-capitalize\">{previousNextPokemon[1]?.name}</div>\r\n                            <FontAwesomeIcon icon={faChevronRight} />\r\n                        </div> : ''\r\n                        }\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n            <div className=\"p-4 d-flex flex-column\" style={{ gap: '10px' }}>\r\n                <Row>\r\n                    <Col bsPrefix=\"col-12\">\r\n                        <Card className=\"shadow border-0\">\r\n\r\n                            <Card.Body>\r\n\r\n                                <Row>\r\n                                    <Col bsPrefix=\"col-12 col-md-6\">\r\n                                        <img className=\"w-100\" alt={`${pokemon?.name}`} src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${index}.png`} />\r\n                                    </Col>\r\n                                    <Col bsPrefix=\"col-12 col-md-6 d-flex flex-column\" style={{ gap: '10px' }}>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <div className=\"text-capitalize h3\">{pokemon?.name}</div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col> National No.</Col>\r\n                                            <Col >\r\n                                                <div className=\"mr-2\">{String(pokemon?.id).padStart(3, '0')}</div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>Type</Col>\r\n                                            <Col>\r\n                                                <div className=\"d-flex flex-wrap\" style={{ gap: '5px' }}>\r\n                                                    {pokemon?.types?.map((t: any, i: number) => \r\n                                                        <TypePill type={t.type.name} key={`pokemonType${i}`}></TypePill>\r\n                                                    )}\r\n                                                </div>\r\n\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>Abilities</Col>\r\n                                            <Col>\r\n                                                {pokemon?.abilities.map((a: any, i: number) => {\r\n                                                    return <div className=\"text-capitalize\" key={`ability${i}`}>{a.ability?.name}</div>\r\n                                                })}\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>Held items</Col>\r\n                                            <Col>\r\n                                                {pokemon?.held_items.map((r: any, i: number) => {\r\n                                                    return <div className=\"text-capitalize\" key={`item${i}`}>{r.item.name}</div>\r\n                                                })}\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>Height</Col>\r\n                                            <Col>\r\n                                                <NumberFormat value={pokemon?.height / 10} displayType={'text'} thousandSeparator={true} suffix=\"m\" decimalScale={2} />\r\n\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>Weight</Col>\r\n                                            <Col>\r\n                                                <NumberFormat value={pokemon?.weight / 10} displayType={'text'} thousandSeparator={true} suffix=\"kg\" decimalScale={2} />\r\n\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <div></div>\r\n                                        <div></div>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col bsPrefix=\"col-12\">\r\n                        <Card className=\"w-100 shadow border-0\">\r\n                            <Card.Body>\r\n                                <div className=\"h3\">Base stats</div>\r\n                                <div className=\"d-flex flex-column\" style={{ gap: '20px' }}>\r\n                                    <Row>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"order-1\">\r\n                                            <div style={{ width: '110px', maxWidth: '110px' }}>HP</div>\r\n                                        </Col>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"order-12 order-md-2\">\r\n                                            <div style={{ width: '30px' }}>\r\n                                                {pokemon?.stats?.[0]?.base_stat}\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col bsPrefix=\"col\" className=\"d-flex align-items-center order-3\">\r\n                                            <ProgressBar className=\"w-100\" variant={getBarColorClass(pokemon?.stats?.[0]?.base_stat)} now={pokemon?.stats?.[0]?.base_stat / 200 * 100} /></Col>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"d-none d-md-block order-4\">\r\n                                            <div style={{ width: '30px' }}>\r\n                                                {useStatCalculator(pokemon?.stats?.[0]?.base_stat, pokemon?.stats?.[0]?.stat?.name, -1)}\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"d-none d-md-block order-5\">\r\n                                            <div style={{ width: '30px' }}>\r\n                                                {useStatCalculator(pokemon?.stats?.[0]?.base_stat, pokemon?.stats?.[0]?.stat?.name, 1)}\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"order-1\">\r\n                                            <div style={{ width: '110px', maxWidth: '110px' }}>Attack</div>\r\n                                        </Col>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"order-12 order-md-2\">\r\n                                            <div style={{ width: '30px' }}>\r\n                                                {pokemon?.stats?.[1]?.base_stat}\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col bsPrefix=\"col\" className=\"d-flex align-items-center order-3\">\r\n                                            <ProgressBar className=\"w-100\" variant={getBarColorClass(pokemon?.stats?.[1]?.base_stat)} now={pokemon?.stats?.[1]?.base_stat / 200 * 100} /></Col>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"d-none d-md-block order-4\">\r\n                                            <div style={{ width: '30px' }}>\r\n                                                {useStatCalculator(pokemon?.stats?.[1]?.base_stat, pokemon?.stats?.[1]?.stat?.name, -1)}\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"d-none d-md-block order-5\">\r\n                                            <div style={{ width: '30px' }}>\r\n                                                {useStatCalculator(pokemon?.stats?.[1]?.base_stat, pokemon?.stats?.[1]?.stat?.name, 1)}\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"order-1\">\r\n                                            <div style={{ width: '110px', maxWidth: '110px' }}>Defense</div>\r\n                                        </Col>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"order-12 order-md-2\">\r\n                                            <div style={{ width: '30px' }}>\r\n                                                {pokemon?.stats?.[2]?.base_stat}\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col bsPrefix=\"col\" className=\"d-flex align-items-center order-3\">\r\n                                            <ProgressBar className=\"w-100\" variant={getBarColorClass(pokemon?.stats?.[2]?.base_stat)} now={pokemon?.stats?.[2]?.base_stat / 200 * 100} /></Col>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"d-none d-md-block order-4\">\r\n                                            <div style={{ width: '30px' }}>\r\n                                                {useStatCalculator(pokemon?.stats?.[2]?.base_stat, pokemon?.stats?.[2]?.stat?.name, -1)}\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"d-none d-md-block order-5\">\r\n                                            <div style={{ width: '30px' }}>\r\n                                                {useStatCalculator(pokemon?.stats?.[2]?.base_stat, pokemon?.stats?.[2]?.stat?.name, 1)}\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"order-1\">\r\n                                            <div style={{ width: '110px', maxWidth: '110px' }}>Special attack</div>\r\n                                        </Col>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"order-12 order-md-2\">\r\n                                            <div style={{ width: '30px' }}>\r\n                                                {pokemon?.stats?.[3]?.base_stat}\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col bsPrefix=\"col\" className=\"d-flex align-items-center order-3\">\r\n                                            <ProgressBar className=\"w-100\" variant={getBarColorClass(pokemon?.stats?.[3]?.base_stat)} now={pokemon?.stats?.[3]?.base_stat / 200 * 100} /></Col>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"d-none d-md-block order-4\">\r\n                                            <div style={{ width: '30px' }}>\r\n                                                {useStatCalculator(pokemon?.stats?.[3]?.base_stat, pokemon?.stats?.[3]?.stat?.name, -1)}\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"d-none d-md-block order-5\">\r\n                                            <div style={{ width: '30px' }}>\r\n                                                {useStatCalculator(pokemon?.stats?.[3]?.base_stat, pokemon?.stats?.[3]?.stat?.name, 1)}\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"order-1\">\r\n                                            <div style={{ width: '110px', maxWidth: '110px' }}>Special defense</div>\r\n                                        </Col>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"order-12 order-md-2\">\r\n                                            <div style={{ width: '30px' }}>\r\n                                                {pokemon?.stats?.[4]?.base_stat}\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col bsPrefix=\"col\" className=\"d-flex align-items-center order-3\">\r\n                                            <ProgressBar className=\"w-100\" variant={getBarColorClass(pokemon?.stats?.[4]?.base_stat)} now={pokemon?.stats?.[4]?.base_stat / 200 * 100} /></Col>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"d-none d-md-block order-4\">\r\n                                            <div style={{ width: '30px' }}>\r\n                                                {useStatCalculator(pokemon?.stats?.[4]?.base_stat, pokemon?.stats?.[4]?.stat?.name, -1)}\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"d-none d-md-block order-5\">\r\n                                            <div style={{ width: '30px' }}>\r\n                                                {useStatCalculator(pokemon?.stats?.[4]?.base_stat, pokemon?.stats?.[4]?.stat?.name, 1)}\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"order-1\">\r\n                                            <div style={{ width: '110px', maxWidth: '110px' }}>Speed</div>\r\n                                        </Col>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"order-12 order-md-2\">\r\n                                            <div style={{ width: '30px' }}>\r\n                                                {pokemon?.stats?.[5]?.base_stat}\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col bsPrefix=\"col\" className=\"d-flex align-items-center order-3\">\r\n                                            <ProgressBar className=\"w-100\" variant={getBarColorClass(pokemon?.stats?.[5]?.base_stat)} now={pokemon?.stats?.[5]?.base_stat / 200 * 100} /></Col>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"d-none d-md-block order-4\">\r\n                                            <div style={{ width: '30px' }}>\r\n                                                {useStatCalculator(pokemon?.stats?.[5]?.base_stat, pokemon?.stats?.[5]?.stat?.name, -1)}\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"d-none d-md-block order-5\">\r\n                                            <div style={{ width: '30px' }}>\r\n                                                {useStatCalculator(pokemon?.stats?.[5]?.base_stat, pokemon?.stats?.[5]?.stat?.name, 1)}\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"order-1\">\r\n                                            <div style={{ width: '110px', maxWidth: '110px' }}>\r\n                                                Total\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"order-12 order-md-2\">\r\n                                            <div className=\"font-weight-bolder\" style={{ width: '30px' }}>\r\n                                                {pokemon?.stats?.reduce((save: number, curr: any) => save + curr?.base_stat, 0)}\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col bsPrefix=\"col\" className=\"d-flex align-items-center order-3\">\r\n                                        </Col>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"d-none d-md-block order-4\">\r\n                                                Min\r\n                                        </Col>\r\n                                        <Col bsPrefix=\"col-auto\" className=\"d-none d-md-block order-5\">\r\n                                                Max\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col bsPrefix=\"col-12\">\r\n                        <Card className=\"w-100 shadow border-0\">\r\n                            <Card.Body>\r\n                                <div className=\"h3\">Training</div>\r\n                                <div className=\"d-flex flex-column\" style={{ gap: '20px' }}>\r\n                                    <Row>\r\n                                        <Col>EV yield</Col>\r\n                                        <Col>\r\n                                            <div className=\"d-flex\" style={{ gap: '10px' }}>\r\n                                                {pokemon?.stats?.[0].effort ? <span>{pokemon?.stats?.[0].effort} HP</span> : ''}\r\n                                                {pokemon?.stats?.[1].effort ? <span>{pokemon?.stats?.[1].effort} Attack</span> : ''}\r\n                                                {pokemon?.stats?.[2].effort ? <span>{pokemon?.stats?.[2].effort} Defense</span> : ''}\r\n                                                {pokemon?.stats?.[3].effort ? <span>{pokemon?.stats?.[3].effort} Special attack</span> : ''}\r\n                                                {pokemon?.stats?.[4].effort ? <span>{pokemon?.stats?.[4].effort} Special defense</span> : ''}\r\n                                                {pokemon?.stats?.[5].effort ? <span>{pokemon?.stats?.[5].effort} Speed</span> : ''}\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>Catch rate</Col>\r\n                                        <Col>{pokemon?.capture_rate}</Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>Gender</Col>\r\n                                        <Col className=\"d-flex\" style={{ gap: '10px' }}>\r\n                                            <div>\r\n                                                <FontAwesomeIcon className=\"text-info\" icon={faMars} />\r\n                                                {`${(8 - pokemon?.gender_rate) / 8 * 100}%`}\r\n                                            </div>\r\n\r\n                                            <div>\r\n                                                <FontAwesomeIcon className=\"text-danger\" icon={faVenus} />\r\n                                                {`${(pokemon?.gender_rate) / 8 * 100}%`}\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>Egg group</Col>\r\n                                        <Col>{pokemon?.egg_groups.map((e: any, i: number) => <div className=\"text-capitalize\" key={`egg${i}`}>{e.name}</div>)}</Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>Egg Steps</Col>\r\n                                        <Col>~{pokemon?.hatch_counter * 256}</Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>Base happiness</Col>\r\n                                        <Col>{pokemon?.base_happiness}</Col>\r\n                                    </Row>\r\n\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n\r\n                <Row noGutters>\r\n                    <Col bsPrefix=\"col-12\">\r\n                        <Card className=\"w-100 shadow border-0\">\r\n                            <Card.Body>\r\n                                <div className=\"h3\">Moveset</div>\r\n                                <Row noGutters className=\"h6\" >\r\n                                    <Col bsPrefix=\"col-auto\" style={{width: '100px'}}></Col>\r\n                                    <Col bsPrefix=\"col-4\">Move</Col>\r\n                                    <Col style={{width: '80px'}}>Type</Col>\r\n                                    \r\n                                    <Col style={{width: '50px'}} className=\"d-none d-md-block\">Power</Col>\r\n                                    <Col style={{width: '70px'}} className=\"d-none d-lg-block\">Accuracy</Col>\r\n                                    <Col style={{width: '70px'}} className=\"d-none d-xl-block\">Category</Col>\r\n                                    <Col style={{width: '20px'}} className=\"d-none d-lg-block\">PP</Col>\r\n                                   \r\n                                    \r\n                                </Row>\r\n                                <div className=\"d-flex flex-column\" style={{ gap: '20px' }}>\r\n                                    {pokemon?.moves.map((m: any, i: number) => <Row noGutters key={`move${i}`} >\r\n                                        <Col bsPrefix=\"col-auto\" style={{width: '100px'}} className=\"text-capitalize\">{m.levelLearnedAt > 0 ? m.levelLearnedAt : m.method}</Col>\r\n                                        <Col bsPrefix=\"col-4\" className=\"text-capitalize\" >{m?.name.replaceAll('-', ' ')}</Col>\r\n                                        <Col style={{width: '80px'}}>\r\n                                            {/* <div style={{ width: '80px', backgroundColor: (TypeColor as { [key: string]: string })[m.type] }} className=\"mx-1 px-2 rounded-pill shadow\" key={'mt' + i}>\r\n                                                 <div className=\"text-white text-capitalize text-center \">{m.type}</div>\r\n                                            </div>                                           */}\r\n                                            <TypePill type={m.type}></TypePill>\r\n                                        </Col>\r\n                                       \r\n                                      \r\n                                      \r\n                                        <Col style={{width: '50px'}} className=\"d-none d-md-block\">{m.power || '---'}</Col>\r\n                                    <Col style={{width: '70px'}} className=\"d-none d-lg-block\">{m.accuracy || '---'}</Col>\r\n                                    <Col style={{width: '70px'}} className=\"d-none d-xl-block\"><img style={{width: '70px', objectFit: 'scale-down'}} src={m.damageClass === 'status' ? Status : m.damageClass === 'physical' ? Physical : Special}/></Col>\r\n                                    <Col style={{width: '20px'}} className=\"d-none d-lg-block\">{m.pp}</Col>\r\n                                    </Row>\r\n                                    )}\r\n\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n                <Row noGutters>\r\n                    <Col bsPrefix=\"col-12\">\r\n                        <Card className=\"w-100 shadow border-0\">\r\n                            <Card.Body>\r\n                                <div className=\"h3\">Evolution</div>\r\n                                <Row noGutters  >\r\n                                    <Col bsPrefix=\"col-12 col-md\" className=\"d-flex align-items-center justify-content-center\" >\r\n                                        {pokemon?.evolution ?\r\n                                            <div>\r\n                                                <img style={{ width: '100px' }} alt={`${pokemon?.evolution?.rootName}`} src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokemon?.evolution?.rootId}.png`} />\r\n                                                <div className=\"text-capitalize text-center\">{pokemon?.evolution?.rootName}</div>\r\n                                            </div> : ''\r\n                                        }\r\n\r\n\r\n                                    </Col>\r\n\r\n                                    {pokemon?.evolution?.chain.map((col: any, i: number) =>\r\n                                        <Col bsPrefix=\"col-12 col-md\" className=\"d-flex flex-column justify-content-center align-items-center\" key={`evolutionChain${i}`}>\r\n                                            {col.map((c: any, i: number) =>\r\n                                                <React.Fragment key={`evolution${i}`}>\r\n                                                    <Row noGutters >\r\n                                                        <Col bsPrefix=\"col-auto\" className=\"position-relative d-flex flex-column flex-wrap\">\r\n                                                            <div className=\"position-absolute d-flex flex-wrap align-items-center justify-content-center h-100 w-100\" style={{ height: '60px', left: '-30px' }}>\r\n                                                                {c.evolutionDetail.map((d: any, i: number) =>\r\n\r\n                                                                    <div key={`evolutionDetail${i}`} >\r\n                                                                        {\r\n                                                                            d?.min_level ?\r\n                                                                                <div className=\"text-center\">\r\n                                                                                    {d?.held_item ? <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/${d.held_item.name}.png`} /> : <img src=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/rare-candy.png\" />}\r\n\r\n                                                                                    <div>\r\n                                                                                        Lv.{d?.min_level}\r\n                                                                                        {d.gender !== null ?\r\n                                                                                            d.gender === 1 ? <FontAwesomeIcon className=\"text-danger\" icon={faVenus} /> :\r\n                                                                                                <FontAwesomeIcon className=\"text-info\" icon={faMars} /> :\r\n                                                                                            ''\r\n                                                                                        }\r\n\r\n                                                                                    </div>\r\n                                                                                </div> : ''\r\n                                                                        }\r\n\r\n                                                                        {d.item ?\r\n                                                                            <div className=\"text-center\">\r\n                                                                                <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/${d?.item.name}.png`} />\r\n                                                                            </div> : ''\r\n                                                                        }\r\n\r\n                                                                        {d.trigger.name === 'trade' ?\r\n                                                                            <div className=\"text-center\">\r\n                                                                                {d?.held_item ? <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/${d?.held_item.name}.png`} /> : ''}\r\n                                                                                <div>Trade</div>\r\n                                                                            </div> : ''\r\n                                                                        }\r\n                                                                        {d.known_move_type ?\r\n                                                                            <div className=\"text-center\">\r\n                                                                                <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-${d?.known_move_type.name}.png`} />\r\n\r\n                                                                            </div> : ''\r\n                                                                        }\r\n\r\n                                                                        {d.time_of_day ?\r\n                                                                            <div className=\"text-center text-capitalize\">\r\n                                                                                {d?.held_item ? <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/${d?.held_item.name}.png`} /> : ''}\r\n                                                                                <div>{\r\n                                                                                    d.time_of_day === 'day' ?\r\n                                                                                        <FontAwesomeIcon className=\"text-warning\" icon={faSun} ></FontAwesomeIcon> :\r\n                                                                                        <FontAwesomeIcon icon={faMoon} ></FontAwesomeIcon>\r\n                                                                                }\r\n                                                                                    <div>&nbsp;</div>\r\n                                                                                </div>\r\n                                                                            </div> : ''\r\n                                                                        }\r\n                                                                        {d.min_happiness ?\r\n                                                                            <div className=\"text-center\">\r\n                                                                                <div> <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/soothe-bell.png`} /></div>\r\n                                                                                <div>{d.min_happiness}</div>\r\n                                                                            </div> : ''\r\n                                                                        }\r\n\r\n\r\n                                                                        {d.min_beauty ?\r\n                                                                            <div className=\"text-center\">\r\n                                                                                <div> <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/blue-scarf.png`} /></div>\r\n                                                                                <div>{d.min_beauty}</div>\r\n                                                                            </div> : ''\r\n                                                                        }\r\n\r\n                                                                        {d.known_move ?\r\n                                                                            <div className=\"text-center\">\r\n\r\n                                                                                <div className=\"\">Learn {d.known_move.name.replaceAll('-', ' ')}</div>\r\n                                                                            </div> : ''\r\n                                                                        }\r\n                                                                        {d.relative_physical_stats !== null ?\r\n                                                                            <div className=\"text-center\">\r\n\r\n                                                                                <div className=\"\">\r\n                                                                                    ATK{\r\n                                                                                        d.relative_physical_stats !== 0 ?\r\n                                                                                            d.relative_physical_stats > 0 ? '>' :\r\n                                                                                                '<' :\r\n                                                                                            '='}DEF</div>\r\n                                                                            </div> : ''\r\n                                                                        }\r\n\r\n\r\n\r\n\r\n                                                                    </div>\r\n                                                                )}\r\n                                                                {c.evolutionOtherMethods.map((m: any, i: number) => {\r\n                                                                    return <React.Fragment key={`evolutionOther${i}`}>\r\n\r\n\r\n                                                                        {m.item ?\r\n                                                                            <div className=\"text-center\">\r\n                                                                                <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/${m?.item.name}.png`} />\r\n                                                                            </div> : ''\r\n                                                                        }\r\n\r\n                                                                        {m.trigger.name === 'trade' ?\r\n                                                                            <div className=\"text-center\">\r\n                                                                                {m?.held_item ? <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/${m?.held_item.name}.png`} /> : ''}\r\n                                                                                <div>Trade</div>\r\n                                                                            </div> : ''\r\n                                                                        }\r\n                                                                        {m.known_move_type ?\r\n                                                                            <div className=\"text-center\">\r\n                                                                                <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-${m?.known_move_type.name}.png`} />\r\n\r\n                                                                            </div> : ''\r\n                                                                        }\r\n\r\n                                                                        {m.time_of_day ?\r\n                                                                            <div className=\"text-center text-capitalize\">\r\n                                                                                {m?.held_item ? <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/${m?.held_item.name}.png`} /> : ''}\r\n                                                                                <div>{\r\n                                                                                    m.time_of_day === 'day' ?\r\n                                                                                        <FontAwesomeIcon className=\"text-warning\" icon={faSun} ></FontAwesomeIcon> :\r\n                                                                                        <FontAwesomeIcon icon={faMoon} ></FontAwesomeIcon>\r\n                                                                                }\r\n                                                                                    <div>&nbsp;</div>\r\n                                                                                </div>\r\n                                                                            </div> : ''\r\n                                                                        }\r\n\r\n                                                                        {m.known_move ?\r\n                                                                            <div className=\"text-center\">\r\n\r\n                                                                                <div className=\"\">Learn {m.known_move.name.replaceAll('-', ' ')}</div>\r\n                                                                            </div> : ''\r\n                                                                        }\r\n\r\n                                                                    </React.Fragment>\r\n                                                                })}\r\n                                                            </div>\r\n\r\n                                                        </Col>\r\n                                                        <Col key={`ev${i}`}>\r\n                                                            <div className=\"text-center\">\r\n\r\n                                                                <img style={{ width: '100px' }} alt={`${c?.name}`} src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${c?.id}.png`} />\r\n                                                                <div className=\"text-capitalize\">{c?.name}</div>\r\n\r\n                                                            </div>\r\n\r\n                                                        </Col>\r\n                                                    </Row>\r\n\r\n                                                </React.Fragment>\r\n\r\n                                            )}\r\n\r\n                                        </Col>\r\n                                    )}\r\n\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\shared\\type-color.enum.ts",[],"C:\\Users\\MP\\Desktop\\pokemon-t\\src\\shared\\utils\\use-on-screen.utils.ts",["127"],"import { useState, useEffect } from \"react\"\r\n\r\nexport default function useOnScreen(ref: any) {\r\n\r\n    const [isIntersecting, setIntersecting] = useState(false)\r\n  \r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => setIntersecting(entry.isIntersecting)\r\n    )\r\n  \r\n    useEffect(() => {\r\n      observer.observe(ref.current)\r\n      return () => { observer.disconnect() }\r\n    }, [])\r\n  \r\n    return isIntersecting;\r\n}","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\shared\\utils\\use-stat-calculator.utils.ts",["128"],"import { useEffect, useState } from \"react\";\r\n\r\nexport default function useStatCalculator(\r\n    baseStat: number, \r\n    statCategory: 'hp' | 'attack' | 'defense' | 'special-attack' | 'special-defense' | 'speed', \r\n    statType: -1 | 0 | 1 ) {\r\n    const [stat,setStat] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (!baseStat) {\r\n            return;\r\n        }\r\n        switch(statCategory) {\r\n            case 'hp':            \r\n                setStat(Math.floor( 0.01 * (2 * baseStat + (statType === 1 ? 31 : 0) + Math.floor(0.25 * (statType === 1 ? 252 : 0))) * 100) + 100 + 10)\r\n                break;\r\n            default:   \r\n                \r\n                setStat(Math.floor((Math.floor( 0.01 * (2 * baseStat + (statType === 1 ? 31 : 0) + Math.floor(0.25 * (statType === 1 ? 252 : 0))) * 100) + 5) * (1 + statType / 10)) )       \r\n                break;\r\n\r\n        }\r\n        \r\n      }, [baseStat]);\r\n    \r\n    return stat;\r\n} ","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\shared\\utils\\use-text-sentence.utils.ts",[],"C:\\Users\\MP\\Desktop\\pokemon-t\\src\\shared\\utils\\scroll-to-top.utils.ts",[],"C:\\Users\\MP\\Desktop\\pokemon-t\\src\\core\\http\\pokemon.repository.ts",[],"C:\\Users\\MP\\Desktop\\pokemon-t\\src\\shared\\utils\\id-extractor.utils.ts",["129","130","131"],"export function IdExtractor(value: string) {   \r\n    \r\n    const regex = new RegExp(`${process.env.REACT_APP_API_DOMAIN || ''}\\/[a-z]+-?[a-z]*\\/([0-9]+)\\/`, 'gm')\r\n    return Number(regex.exec(value)?.[1] || 0);\r\n}","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\shared\\components\\spinner.component.tsx",["132"],"import React from 'react';\r\nimport SpinnerGif from '../../assets/images/spinner.gif';\r\nexport default function Spinner() {\r\n    return <React.Fragment>\r\n        <div className=\"position-fixed\" style={{ top: 0, bottom: 0, left: 0, right: 0,  zIndex: 8000, backdropFilter: 'blur(10px)' }}>\r\n        </div>\r\n\r\n        <div className=\"d-flex align-items-center justify-content-center position-fixed\" style={{ top: 0, bottom: 0, left: 0, right: 0, zIndex: 9999 }}>\r\n           <div>\r\n            <img src={SpinnerGif} />\r\n            <div className=\"text-center\">Loading...</div>\r\n           </div>\r\n        </div>\r\n        \r\n    </React.Fragment>\r\n    \r\n    \r\n}","C:\\Users\\MP\\Desktop\\pokemon-t\\src\\shared\\contexts\\spinner.context.tsx",[],"C:\\Users\\MP\\Desktop\\pokemon-t\\src\\shared\\components\\type-pill.component.tsx",[],"C:\\Users\\MP\\Desktop\\pokemon-t\\src\\shared\\components\\fab-menu\\fab-menu.component.tsx",["133","134","135","136","137","138","139"],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":7,"column":3,"nodeType":"146","messageId":"147","endLine":7,"endColumn":7},{"ruleId":"144","severity":1,"message":"148","line":8,"column":3,"nodeType":"146","messageId":"147","endLine":8,"endColumn":13},{"ruleId":"144","severity":1,"message":"149","line":25,"column":9,"nodeType":"146","messageId":"147","endLine":25,"endColumn":19},{"ruleId":"144","severity":1,"message":"150","line":1,"column":8,"nodeType":"146","messageId":"147","endLine":1,"endColumn":13},{"ruleId":"151","severity":1,"message":"152","line":97,"column":24,"nodeType":"153","messageId":"154","endLine":97,"endColumn":35,"fix":"155"},{"ruleId":"144","severity":1,"message":"156","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":25},{"ruleId":"157","severity":1,"message":"158","line":26,"column":8,"nodeType":"159","endLine":26,"endColumn":10,"suggestions":"160"},{"ruleId":"157","severity":1,"message":"161","line":33,"column":7,"nodeType":"159","endLine":33,"endColumn":17,"suggestions":"162"},{"ruleId":"144","severity":1,"message":"163","line":1,"column":41,"nodeType":"146","messageId":"147","endLine":1,"endColumn":48},{"ruleId":"144","severity":1,"message":"164","line":1,"column":66,"nodeType":"146","messageId":"147","endLine":1,"endColumn":74},{"ruleId":"144","severity":1,"message":"165","line":7,"column":10,"nodeType":"146","messageId":"147","endLine":7,"endColumn":19},{"ruleId":"144","severity":1,"message":"166","line":10,"column":8,"nodeType":"146","messageId":"147","endLine":10,"endColumn":23},{"ruleId":"157","severity":1,"message":"167","line":26,"column":8,"nodeType":"159","endLine":26,"endColumn":15,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":424,"column":96,"nodeType":"171","endLine":424,"endColumn":245},{"ruleId":"169","severity":1,"message":"170","line":466,"column":101,"nodeType":"171","endLine":466,"endColumn":211},{"ruleId":"169","severity":1,"message":"170","line":466,"column":214,"nodeType":"171","endLine":466,"endColumn":313},{"ruleId":"169","severity":1,"message":"170","line":482,"column":81,"nodeType":"171","endLine":482,"endColumn":187},{"ruleId":"169","severity":1,"message":"170","line":488,"column":97,"nodeType":"171","endLine":488,"endColumn":208},{"ruleId":"169","severity":1,"message":"170","line":494,"column":81,"nodeType":"171","endLine":494,"endColumn":201},{"ruleId":"169","severity":1,"message":"170","line":501,"column":97,"nodeType":"171","endLine":501,"endColumn":208},{"ruleId":"169","severity":1,"message":"170","line":513,"column":87,"nodeType":"171","endLine":513,"endColumn":189},{"ruleId":"169","severity":1,"message":"170","line":521,"column":87,"nodeType":"171","endLine":521,"endColumn":188},{"ruleId":"169","severity":1,"message":"170","line":555,"column":81,"nodeType":"171","endLine":555,"endColumn":187},{"ruleId":"169","severity":1,"message":"170","line":561,"column":97,"nodeType":"171","endLine":561,"endColumn":208},{"ruleId":"169","severity":1,"message":"170","line":567,"column":81,"nodeType":"171","endLine":567,"endColumn":201},{"ruleId":"169","severity":1,"message":"170","line":574,"column":97,"nodeType":"171","endLine":574,"endColumn":208},{"ruleId":"157","severity":1,"message":"172","line":14,"column":8,"nodeType":"159","endLine":14,"endColumn":10,"suggestions":"173"},{"ruleId":"157","severity":1,"message":"174","line":24,"column":10,"nodeType":"159","endLine":24,"endColumn":20,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":3,"column":72,"nodeType":"178","messageId":"179","endLine":3,"endColumn":73,"suggestions":"180"},{"ruleId":"176","severity":1,"message":"177","line":3,"column":88,"nodeType":"178","messageId":"179","endLine":3,"endColumn":89,"suggestions":"181"},{"ruleId":"176","severity":1,"message":"177","line":3,"column":98,"nodeType":"178","messageId":"179","endLine":3,"endColumn":99,"suggestions":"182"},{"ruleId":"169","severity":1,"message":"170","line":10,"column":13,"nodeType":"171","endLine":10,"endColumn":37},{"ruleId":"144","severity":1,"message":"183","line":1,"column":21,"nodeType":"146","messageId":"147","endLine":1,"endColumn":32},{"ruleId":"144","severity":1,"message":"184","line":1,"column":34,"nodeType":"146","messageId":"147","endLine":1,"endColumn":42},{"ruleId":"144","severity":1,"message":"145","line":4,"column":10,"nodeType":"146","messageId":"147","endLine":4,"endColumn":14},{"ruleId":"169","severity":1,"message":"170","line":33,"column":13,"nodeType":"171","endLine":33,"endColumn":61},{"ruleId":"169","severity":1,"message":"170","line":41,"column":13,"nodeType":"171","endLine":41,"endColumn":59},{"ruleId":"169","severity":1,"message":"170","line":49,"column":13,"nodeType":"171","endLine":49,"endColumn":37},{"ruleId":"169","severity":1,"message":"170","line":57,"column":13,"nodeType":"171","endLine":57,"endColumn":116},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'pokemonRef' is assigned a value but never used.","'axios' is defined but never used.","@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","NewExpression","useLiteral",{"range":"187","text":"188"},"'PokemonRepository' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'pokemonService' and 'setIsLoading'. Either include them or remove the dependency array.","ArrayExpression",["189"],"React Hook useEffect has missing dependencies: 'history.location.hash' and 'scrollToGen'. Either include them or remove the dependency array.",["190"],"'faHeart' is defined but never used.","'faRibbon' is defined but never used.","'TypeColor' is defined but never used.","'useTextSentence' is defined but never used.","React Hook useEffect has a missing dependency: 'getPokemon'. Either include it or remove the dependency array.",["191"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'observer' and 'ref'. Either include them or remove the dependency array.",["192"],"React Hook useEffect has missing dependencies: 'statCategory' and 'statType'. Either include them or remove the dependency array. If 'setStat' needs the current value of 'statType', you can also switch to useReducer instead of useState and read 'statType' in the reducer.",["193"],"no-useless-escape","Unnecessary escape character: \\/.","TemplateElement","unnecessaryEscape",["194","195"],["196","197"],["198","199"],"'faArrowDown' is defined but never used.","'faSearch' is defined but never used.","no-global-assign","no-unsafe-negation",[4232,4243],"[]",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"messageId":"210","fix":"211","desc":"212"},{"messageId":"213","fix":"214","desc":"215"},{"messageId":"210","fix":"216","desc":"212"},{"messageId":"213","fix":"217","desc":"215"},{"messageId":"210","fix":"218","desc":"212"},{"messageId":"213","fix":"219","desc":"215"},"Update the dependencies array to be: [pokemonService, setIsLoading]",{"range":"220","text":"221"},"Update the dependencies array to be: [history.location.hash, pokemons, scrollToGen]",{"range":"222","text":"223"},"Update the dependencies array to be: [getPokemon, index]",{"range":"224","text":"225"},"Update the dependencies array to be: [observer, ref]",{"range":"226","text":"227"},"Update the dependencies array to be: [baseStat, statCategory, statType]",{"range":"228","text":"229"},"removeEscape",{"range":"230","text":"231"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"232","text":"233"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"234","text":"231"},{"range":"235","text":"233"},{"range":"236","text":"231"},{"range":"237","text":"233"},[1137,1139],"[pokemonService, setIsLoading]",[1309,1319],"[history.location.hash, pokemons, scrollToGen]",[1495,1502],"[getPokemon, index]",[395,397],"[observer, ref]",[904,914],"[baseStat, statCategory, statType]",[126,127],"",[126,126],"\\",[142,143],[142,142],[152,153],[152,152]]